[package]
name = "file_io_bench"
version = "0.1.0"
edition = "2021"


[features]
default = []
log_trace = []
log_debug = []
log_info = []
log_warn = []
log_error = []
# Page sizes. If page sizes are larger than 256k, pages will be heap allocated to avoid stack overflow.
# Default is 4KB (defined in page.rs)
4k_page = []
8k_page = []
16k_page = []
32k_page = []
64k_page = []
128k_page = []
256k_page = ["heap_allocated_page"]
512k_page = ["heap_allocated_page"]
1m_page = ["heap_allocated_page"]
heap_allocated_page = []

stat = []

preadpwrite_sync = [] # synchronous I/O implementation using pread/pwrite. Default
iouring_sync = [] # synchronous I/O implementation using io-uring
inmemory_async_simulator = [] # best case scenario for async I/O
iouring_async = [] # asynchronous I/O implementation using io-uring
copy_async_simulator = [] # best case scenario for async I/O
async_write = [] # io-uring without prefetching
new_async_write = [] # io-uring with prefetching

[dependencies]
chrono = "0.4.39"
tempfile = "3.16.0"
rand = {version = "0.9.0", features = ["small_rng"]}
serde = { version = "1.0.217", features = ["derive"] }
lazy_static = { version = "1.4" }
clap = {version = "4.5.27", features = ["derive"]}
io-uring = {version = "0.7.4" }
libc = {version = "0.2.169" }
dashmap = {version = "6.1.0" }

[profile.release]
lto = true
panic = "abort"
codegen-units = 1
# debug = true # For perf